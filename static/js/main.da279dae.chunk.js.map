{"version":3,"sources":["components/Home.js","components/Quote.js","components/Motivation.js","actions/fetchQuote.js","components/Form.js","actions/sendQuote.js","components/Rules.js","components/NavBar.js","App.js","index.js","reducers/manageQuote.js"],"names":["Home","React","Component","Quote","id","this","props","entry","quote","whosaid","origin","sentby","Motivation","componentDidMount","fetchQuote","handleLoading","console","log","connect","state","loading","dispatch","type","fetch","then","response","json","payload","Form","handleCreditChange","event","setState","credit","target","value","handleNameChange","name","handleMotivationChange","message","handleOriginChange","handleSubmit","preventDefault","approved","alert","sendQuote","bind","onSubmit","onChange","method","headers","Accept","body","JSON","stringify","res","NavBar","className","to","style","paddingRight","App","exact","path","component","Rules","store","createStore","action","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da279dae.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div>\n                Welcome To The Motivational App \n            </div>\n        );\n    }\n};","import React from 'react';\n\nexport default class Quote extends React.Component {\n    render() {\n        return (\n            <ol id=\"quote\">\n              \n              <div key={this.props.entry.id}>\n                <p>\n                  {this.props.entry.quote}\n                </p>\n                <p>\n                    Said by {this.props.entry.whosaid} in {this.props.entry.origin}    \n                </p>\n                <p>\n                    Motivation was submitted by {this.props.entry.sentby}\n                </p>\n              </div>\n            </ol>\n          )\n    }\n};","import React from 'react';\nimport { fetchQuote } from \"../actions/fetchQuote\";\nimport { connect } from 'react-redux'\nimport Quote from './Quote'\n\n class Motivation extends React.Component {\n\n    componentDidMount = () => {\n        this.props.fetchQuote()\n    }\n  \n    handleLoading = () => {\n        console.log(this.props.entry)\n        return <Quote entry={this.props.entry} />\n    }\n\n    render() {\n        return (\n            <div>\n                Words To Live By\n                {this.handleLoading()}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        entry: state.entry,\n      loading: state.loading\n    }\n  }\n\n\n  export default connect(mapStateToProps, { fetchQuote })(Motivation)","export const fetchQuote = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_QUOTE'})\n      fetch('https://ancient-lake-58391.herokuapp.com/api/v1/quotes') \n      .then(response => response.json())\n      .then(entry => dispatch({ type: 'ADD_QUOTE', payload: entry}));\n    }\n  }","import React from 'react';\nimport { sendQuote } from \"../actions/sendQuote\";\nimport { connect } from 'react-redux'\nclass Form extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n      name: \"Anonymous\",\n      message: 'Please write your Motivation here.',\n      credit: \"Anonymous\",\n      origin: \"Unknown\"\n    };\n\n    this.handleMotivationChange = this.handleMotivationChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleCreditChange = this.handleCreditChange.bind(this);\n    this.handleOriginChange = this.handleOriginChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCreditChange = (event) => {\n    this.setState({\n      credit: event.target.value\n    });\n  }\n\n  handleNameChange = (event) =>{\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n    handleMotivationChange = (event) =>{\n      this.setState({\n        message: event.target.value\n      });\n    }\n\n    handleOriginChange = (event) =>{\n      this.setState({\n        origin: event.target.value\n      });\n    }\n\n    handleSubmit = (event) =>{\n    //alert(this.state.name + \" name \" + this.state.message + \" \" + this.state.credit + \" will be submitted\");\n    event.preventDefault();\n    const quote = {quote: {quote: this.state.message, whosaid: this.state.name, origin: this.state.origin, sentby: this.state.credit, approved: false}}\n    alert(this.state.message + \" was submitted, Thank you \" + this.state.sentby + \". An Admin will approve the quote soon\")\n    this.props.sendQuote(quote)\n    }\n\n    render() { \n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Enter Your Motivation Here!:\n            <br></br>\n            <textarea value={this.state.message} onChange={this.handleMotivationChange} />\n            <br></br>\n          </label>\n          <label>\n            Said by who?:\n            <input type=\"text\" value={this.state.name} onChange={this.handleNameChange} />\n            <br></br>\n          </label>\n          <label>\n            Where It Was Said?:\n            <input type=\"text\" value={this.state.origin} onChange={this.handleOriginChange} />\n            <br></br>\n          </label>\n          <label>\n            How To Credit You?:\n            <input type=\"text\" value={this.state.credit} onChange={this.handleCreditChange} />\n            <br></br>\n          </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      );\n    \n    }\n  }\n\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      sendQuote: (entry) => {\n        dispatch(sendQuote(entry))\n      }\n    };\n  };\n  \n  export default connect(null, mapDispatchToProps)(Form);\n","export function sendQuote(entry) {\n    return () => {\n      fetch(`https://ancient-lake-58391.herokuapp.com/api/v1/quotes`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(entry)\n        })\n        .then(res => res.json())\n      };\n    }","import React from 'react';\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>Information About Site:</h1>\n                <p>1: All Submission Will Be Reviewed By App Admin</p>\n                <p>2: Motivation could be a Quote, Saying, Well Words, Or Anything You Think Is Motivational</p>\n                <p>3: Motivation Doesn't Have To Be From Something, It Can Original.</p>\n                <p>4: If You Don't Know Who Said The Quote or Don't Want To Say Who Its From, Leave \"Said By\" As Anonymous</p>\n                <p>5: If You Don't Know Origin Of Message Leave It As Unknown</p>\n                <p>6: Write How You Want To Be Credited, If You Don't Want To Be Credited, Leave It As Anonymous</p>\n                <p>7: Admins Have The Right To Alter Submissions</p>\n                <p>8: Please Message Any Concerns Or Questions To @JakeKViti On Twitter</p>\n                <p>9: Rules Will Be Updated As Needed</p>\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class NavBar extends React.Component {\n    \n    render() {\n        return (\n        <div className=\"navbar\">\n            <hr/>\n        <NavLink to=\"/Motivation/\" style={{paddingRight: '15px'}}>Home</NavLink>\n        <NavLink to=\"/Motivation/moti\" style={{paddingRight: '15px'}}>Random Motivation</NavLink>\n        <NavLink to=\"/Motivation/form\" style={{paddingRight: '15px'}}>Submit Motivation</NavLink>\n        <NavLink to=\"/Motivation/about\" style={{paddingRight: '15px'}}>About</NavLink>\n            <hr/>\n        </div>\n        )\n    }\n}\n","import './App.css';\nimport Home from './components/Home.js'\nimport Motivation from './components/Motivation.js'\nimport Form from './components/Form.js'\nimport Rules from './components/Rules.js'\nimport NavBar from './components/NavBar.js'\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NavBar />\n        <Route exact path=\"/Motivation/\" component={Home} />\n        <Route exact path=\"/Motivation/moti\" component={Motivation} />\n        <Route exact path=\"/Motivation/form\" component={Form} />\n        <Route exact path=\"/Motivation/about\" component={Rules} />\n      </header>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from \"react-redux\";\nimport manageQuote from './reducers/manageQuote'\n\nconst store = createStore( manageQuote, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","export default function manageQuote(state = {\n    entry: [],\n    loading: false\n  }, action) {\n    switch (action.type) {\n      case 'LOADING_QUOTE':\n        return {\n          ...state,\n          entry: state.entry,\n          loading: true\n        }\n      case 'ADD_QUOTE':\n        return {\n          ...state,\n          entry: action.payload,\n          loading: false\n        }       \n        case 'SEND_QUOTE':\n          return {\n            ...state,\n            entry: action.payload\n          }\n      default:\n        return state;\n    }\n  };"],"sourceRoot":""}